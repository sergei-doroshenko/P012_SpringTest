<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="org.sergei" annotation-config="true"/>

    <bean id="performerBean" class="org.sergei.aop.PerformerImpl"/>
    <bean id="aspectBean" class="org.sergei.aop.Aspect" init-method="addAppender"/>
    <bean id="workerBean" class="org.sergei.aop.Worker"/>

    <bean id="debugInterceptor" class="org.sergei.logit.LogInterceptor" init-method="addAppender"/>
    <bean id="testForLogger" class="org.sergei.logit.TestForLogger"/>

    <!-- A regular bean definition in the application context,
    pointing to a bean class that has the @Aspect annotation
    or use @Component annotation -->
    <!--<bean id="decrementAspect" class="org.sergei.add.DecrementAspect"/>-->

    <!-- enable @AspectJ support with XML based configuration -->
    <aop:aspectj-autoproxy />

    <aop:config>
        <aop:aspect ref="aspectBean">
            <aop:pointcut id="performerPointcut" expression="execution (* org.sergei.aop.PerformerImpl.doSmth(..))"/>
            <aop:before method="before" pointcut-ref="performerPointcut"/>
            <aop:after method="after" pointcut-ref="performerPointcut"/>
        </aop:aspect>
        <aop:aspect ref="aspectBean">
            <aop:pointcut id="workerPointcut" expression="execution(* org.sergei.aop.Worker.doSmth(..))"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="workerPointcut"/>
            <aop:after-returning method="afterReturning" pointcut-ref="workerPointcut"/>
        </aop:aspect>
    </aop:config>

    <aop:config>
        <!-- intercept calls of @LogIt methods -->
        <aop:advisor pointcut="(execution(@org.sergei.logit.LogIt * *(..))
                                || execution(* (@org.sergei.logit.LogIt *).*(..)))"
                     advice-ref="debugInterceptor"/>
    </aop:config>
</beans> 